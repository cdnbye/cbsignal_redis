// Code generated by protoc-gen-go.
// source: wire.proto
// DO NOT EDIT!

/*
Package wirepb is a generated protocol buffer package.

It is generated from these files:
	wire.proto

It has these top-level messages:
	RequestHeader
	ResponseHeader
*/
package wirepb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RequestHeader struct {
	Method string `protobuf:"bytes,1,opt,name=method" json:"method,omitempty"`
	Seq    uint64 `protobuf:"varint,2,opt,name=seq" json:"seq,omitempty"`
}

func (m *RequestHeader) Reset()                    { *m = RequestHeader{} }
func (m *RequestHeader) String() string            { return proto.CompactTextString(m) }
func (*RequestHeader) ProtoMessage()               {}
func (*RequestHeader) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ResponseHeader struct {
	Method string `protobuf:"bytes,1,opt,name=method" json:"method,omitempty"`
	Seq    uint64 `protobuf:"varint,2,opt,name=seq" json:"seq,omitempty"`
	Error  string `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
}

func (m *ResponseHeader) Reset()                    { *m = ResponseHeader{} }
func (m *ResponseHeader) String() string            { return proto.CompactTextString(m) }
func (*ResponseHeader) ProtoMessage()               {}
func (*ResponseHeader) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*RequestHeader)(nil), "wirepb.RequestHeader")
	proto.RegisterType((*ResponseHeader)(nil), "wirepb.ResponseHeader")
}

var fileDescriptor0 = []byte{
	// 119 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0xcf, 0x2c, 0x4a,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x03, 0xb1, 0x0b, 0x92, 0x94, 0x74, 0xb8, 0x78,
	0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x3c, 0x52, 0x13, 0x53, 0x52, 0x8b, 0x84, 0xf8, 0xb8,
	0xd8, 0x72, 0x53, 0x4b, 0x32, 0xf2, 0x53, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x85, 0xb8, 0xb9,
	0x98, 0x8b, 0x53, 0x0b, 0x25, 0x98, 0x80, 0x1c, 0x16, 0x25, 0x1b, 0x2e, 0xbe, 0xa0, 0xd4, 0xe2,
	0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x22, 0x94, 0x0b, 0xf1, 0x72, 0xb1, 0xa6, 0x16, 0x15, 0xe5, 0x17,
	0x49, 0x30, 0x83, 0xe4, 0x92, 0xd8, 0xc0, 0x56, 0x1b, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xbd,
	0xe0, 0xbd, 0xaf, 0x88, 0x00, 0x00, 0x00,
}
